# .github/workflows/**main.yml**
name: Django-app workflow
on:
  push:
    branches: 
      - master
jobs:
#  tests:
#    name: Tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.7
#      - name: Install dependencies
#        run: | 
#          python -m pip install --upgrade pip 
#          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
#          pip install -r api_yamdb/requirements.txt 
#      - name: Test with flake8 and django tests
#        run: |
#          python -m flake8
#          pytest
          
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
#    needs: tests
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          file: ./api_yamdb/Dockerfile
#          context: api_yamdb
          push: true
          tags: ridmel/api_yamdb_web:latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP_ADDRESS }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}
          script: |
            sudo docekr pull ridmel/api_yamdb_web:latest
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d 
  send_message:
    name: Send message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO_ID_USER }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен! 
